# Function to parse YAML-like file
def parse_yaml(file_path):
    output_dict = {}
    current_dict = output_dict
    stack = []
    with open(file_path, 'r') as file:
        for line in file:
            indent = len(line) - len(line.lstrip(' '))
            key_value = line.strip().split(':')
            while len(stack) > indent:
                stack.pop()
                current_dict = output_dict
                for item in stack:
                    current_dict = current_dict[item]
            key = key_value[0]
            if len(key_value) == 1:  # If it's a dictionary
                if key not in current_dict:
                    current_dict[key] = {}
                stack.append(key)
                current_dict = current_dict[key]
            else:  # It's a leaf item
                value = key_value[1].strip()
                current_dict[key] = value  # Assign the value to the key in the current dictionary

    return output_dict

# Parse the file
data = parse_yaml('/home/chowarro-adm/release.yaml')

# Write lists to text files
def write_list_to_file(file_name, data_list):
    with open(file_name, 'w') as f:
        for item in data_list:
            f.write("{}\n".format(item))

# Sample usage, make sure the keys exist in the parsed data
write_list_to_file('Deploy-EMEProjectsList.txt', data['Build']['abinitio']['EMEProjectsList'])
write_list_to_file('Deploy-DatabaseScripts.txt', data['Build']['database']['DatabaseScripts'])
write_list_to_file('Deploy-CCJobList.txt', data['Deploy']['CCJobList'])
write_list_to_file('Deploy-WebServiceCommandList.txt', data['Deploy']['WebServiceCommandList'])
write_list_to_file('Deploy-AbinitoCommandList.txt', data['Deploy']['AbinitoCommandList'])
write_list_to_file('Rollback-DatabaseScripts.txt', data['Rollback']['database']['DatabaseScripts'])


{'- https': '//github.source.internal.cba/TradedProducts/REx_Oracle/blob/release-rex-2023/Deploy/releases/2023/07_2023/rolback_frtb_rex_app_db_objects.sql', 'Rollback': '', 'EMEProjectsList': '', 'CCJobList': '', 'Deploy': '', 'database': '', '- cc/rex_2_0/process_eod_stress/jobdefs/Process_MX_MRE_Job_-_PnLVector_MACRO_Stress_Testing_rex2-mre-process-pnlvector-macro-stress-testing-1.jobdef': {'- cc/rex_2_0/process_eod_stress/jobdefs/testjobdef.jobdef': {'- testwebservice.1': {'- testwebservice.1': {}}, 'AbinitoCommandList': '', '- sandbodlist': {}, 'WebServiceCommandList': ''}}, '- /Projects/CBA/IBM/Rex/Private/rex_limits': {'- /Projects/CBA/IBM/Rex/Private/rex': {'- https': '//github.source.internal.cba/TradedProducts/REx_Oracle/blob/release-rex-2023/Deploy/releases/2023/07_2023/02_frtb_rex_app_db_objects.sql', '- /Projects/CBA/IBM/Rex/Public/REX_DQ': {'- /Projects/CBA/IBM/Rex/Public/REX_SCHEDULE': {}}, 'DatabaseScripts': '', 'database': ''}}, 'Build': '', 'abinitio': '', 'DatabaseScripts': ''}
Traceback (most recent call last):
  File "parse_yaml_file3.py", line 37, in <module>
    write_list_to_file('Deploy-EMEProjectsList.txt', data['Build']['abinitio']['EMEProjectsList'])
TypeError: string indices must be integers, not str

