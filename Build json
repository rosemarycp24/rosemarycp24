curl -u username:password -X PUT -H "Content-Type: application/json" -T build.json "https://your-artifactory-url/repo/path/to/build-info/build.json"



curl -u "acoe_rex_build:Vl1mH*OMv5:r3!1F" -X PUT -H "Content-Type: application/json" -T build.json "https://artifactory.internal.cba/builds/Test/build.json"


3333
import paramiko
from scp import SCPClient

def createSSHClient(server, port, user, password):
    client = paramiko.SSHClient()
    client.load_system_host_keys()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    client.connect(server, port, user, password)
    return client

ssh = createSSHClient('IP', '22', 'User', "Password")
scp = SCPClient(ssh.get_transport())

#!/bin/ksh

# Build Info JSON Data
build_json='
{
  "version": "1.0",
  "name": "MyApp",
  "number": "123",
  "type": "generic",
  "started": "2023-08-31T10:00:00Z",
  "modules": [
    {
      "id": "com.example:myapp",
      "artifacts": [
        {
          "type": "jar",
          "sha1": "abc123",
          "md5": "def456",
          "name": "myapp.jar"
        }
      ],
      "dependencies": [
        {
          "id": "org.springframework:spring-core",
          "type": "jar",
          "scopes": ["compile"]
        }
      ]
    }
  ]
}
'

# Save Build Info JSON to a file
echo "$build_json" > build.json

# Artifactory URL and repository path
artifactory_url="https://your-artifactory-url"
repository_path="path/to/artifactory/repo"

# Upload Build Info JSON to Artifactory using cURL
curl -u username:password -X PUT "$artifactory_url/$repository_path/build.json" -T build.json

# Clean up: Remove the temporary JSON file
rm build.json



0000000000000//////////////////////////////////////
# Example cURL command
curl -u username:password -X POST "https://your-artifactory-url/api/build" -T path/to/build.json

{
  "version": "1.0",
  "name": "MyApp",
  "number": "123",
  "type": "generic",
  "started": "2023-08-31T10:00:00Z",
  "modules": [
    {
      "id": "com.example:myapp",
      "artifacts": [
        {
          "type": "jar",
          "sha1": "abc123",
          "md5": "def456",
          "name": "myapp.jar"
        }
      ],
      "dependencies": [
        {
          "id": "org.springframework:spring-core",
          "type": "jar",
          "scopes": ["compile"]
        }
      ]
    }
  ]
}








----------------
#!/bin/ksh

# Build Information
build_name="MyApp"
build_version="1.0"
build_timestamp=$(date "+%Y-%m-%d %H:%M:%S")

# Source Code Information
repository_url="https://github.com/myuser/myapp.git"
commit_hash=$(git rev-parse HEAD)
commit_message=$(git log -1 --pretty=format:%s)

# Output Build JSON
cat <<EOF > build.json
{
  "build_name": "$build_name",
  "build_version": "$build_version",
  "build_timestamp": "$build_timestamp",
  "source_code": {
    "repository_url": "$repository_url",
    "commit_hash": "$commit_hash",
    "commit_message": "$commit_message"
  }
}
EOF

echo "Build JSON created: build.json"

==================================================
#!/bin/ksh

# Build JSON Upload Settings
remote_server="your-remote-server"
remote_user="your-remote-user"
remote_path="/path/to/destination"

# Upload Build JSON using curl
curl -u "$remote_user" -T build.json "sftp://$remote_server$remote_path"

# Check if the upload was successful
if [ $? -eq 0 ]; then
    echo "Build JSON uploaded successfully."
else
    echo "Build JSON upload failed."
fi

