#!/usr/bin/env python

import yaml
import sys
import os

# Define the path to the YAML file on the remote server
remote_yaml_file = '/path/to/remote/projects.yaml'

# Read and parse the YAML file
with open(remote_yaml_file, 'r') as stream:
    yaml_data = yaml.safe_load(stream)

# Define output directory
output_dir = '/path/to/local/output_directory'
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# Function to write data to an output file
def write_output_file(data, filename):
    with open(os.path.join(output_dir, filename), 'w') as output_file:
        output_file.write(data)

# Iterate through YAML sections and write them to separate output files
for section, data in yaml_data.items():
    if isinstance(data, list):
        # Convert the list to a newline-separated string
        section_data = '\n'.join(data)
        # Remove leading/trailing whitespace
        section_data = section_data.strip()
        # Define the output filename based on the section name
        section_name_parts = section.split('-')
        if len(section_name_parts) == 2:
            output_filename = section_name_parts[0] + '-' + section_name_parts[1] + '.txt'
            write_output_file(section_data, output_filename)
        else:
            print(f"Skipping invalid section name: {section}")

    elif data is None:
        # If there is no data in the section, create a zero-byte file
        section_name_parts = section.split('-')
        if len(section_name_parts) == 2:
            output_filename = section_name_parts[0] + '-' + section_name_parts[1] + '.txt'
            open(os.path.join(output_dir, output_filename), 'w').close()
        else:
            print(f"Skipping invalid section name: {section}")

print("Output files have been created with the requested data or as zero-byte files.")
